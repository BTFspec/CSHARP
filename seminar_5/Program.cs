// Задайте двумерный массив.(1 и 2 Функция) Найдите элементы, у которых оба
// индекса чётные, и замените эти элементы на их квадраты.

// 1 ФУНКЦИЯ СОЗДАНИЯ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА
int[,] CreateMatrix(int rows, int columns) //int[,] запятая показывпет что массив двумерный; функция с двумя переменными;
{
    int[,] matr = new int[rows, columns]; // [строки, столбцы]
    Random rnd = new Random(); // в переменной rnd лежит наш рандомный массив
    for (int i = 0; i < rows; i++) // rows = matr.GetLength(0) 0 это индекс строки; rows обращается к длине нашей строки
    {                               //columns = matr.GetLength(1) 1 это индекс столбцов
        // j, m, k
        for (int j = 0; j < columns; j++) // columns = matr.GetLength(1) // перебор столбца
        {
            matr[i, j] = rnd.Next(101); // [0,100], (0, 101)                                                                      // ЧИСЛА В МАССИВЕ БУДУТ ОТ 0 ДО 100
        }
    }
    return matr; // возвращаем готовый массив созданный от 0 до 100
}

// 1 метод создает массив а чтобы вывести его на экран нужен второй метод ниже 
// 2 ФУНКЦИЯ ПЕЧАТЬ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА

void PrintMatrix(int[,] matr)  // ФУНКЦИЯ ВЫВОДА МАССИВА НА ЭКРАН КОТОРЫЙ МЫ СДЕЛАЛИ ВЫШЕ                       Цикл в цикле получается
{
 for (int i = 0; i < matr.GetLength(0); i++) // стр  //попали в строчку обошли все столбцы; потом след строчка также
    {
        for (int j = 0; j < matr.GetLength(1); j++) // столбцы
        {
            Console.Write($"{matr[i, j]}\t"); // "\t" = 4 пробела 
        } // Закончили обход 0 строки, идем в 1
        Console.WriteLine(); // Перенос на новую строчку \\ это чтобы каждая строка массива были раздельно а не на одной строке
    }
}

    
// 3 ФУНКЦИЯ будет находить и умножать четные элементы

void SquareElements(int[,] matr) // Будет брать наш массив // функция SquareElements будет находить и умножать четные элементы  
{
    for (int i = 0; i < matr.GetLength(0); i++) // стр  //попали в строчку обошли все столбцы; потом след строчка также
    {
        for (int j = 0; j < matr.GetLength(1); j++) // столбцы
        {
            if (i % 2 == 0 && j % 2 == 0) // вот тут то мы и делим на 2 и проверяем если четный индекс у строки и столбца = делится без остатка 
                                          //то потом его будем умнажать на него же 
            {
                //matr[i, j] = matr[i, j] * matr[i, j]; //БЕРЕМ СТАРУЮ ЯЧЕЙКУ УМНОЖАЕМ САМУ НА СЕБЯ И СОХРАНЯЕМ В ЭТУ ЖЕ ЯЧЕЙКУ
                matr[i, j] *= matr[i, j]; // тоже самое что выше только в другом виде;                                             САМО ЧИСЛО УМНОЖАЕТСЯ НА СЕБЯ = НЕ ИНДЕКС А ЧИСЛО
            }
        }
    }
}
//1 ФУНКЦИЯ ВЫЗОВ

Console.Write ("Введите количество строк: "); // это такая подсказка;
int rows = Convert.ToInt32(Console.ReadLine()); // это метод получает строку с терминала что мы туда напишем; Convert.ToInt32 = это чтобы строку преобразовать в целые числа
Console.Write ("Введите количество столбцов: "); // это такая подсказка;
int columns = Convert.ToInt32(Console.ReadLine()); // Convert.ToInt32 = это чтобы строку преобразовать в целые числа
int [,] matrix = CreateMatrix(rows, columns);// это результат вызванный 1ФУНКЦИЕЙ он в этой переменной; и говорим функция создай мне функцию где rows строчек и colums столбцов
                                             // которые мы ввели через Convert.ToInt32(Console.ReadLine()) и преобразовали через Convert.ToInt32;

                                             // 2 ФУНЦИЯ ВЫЗОВ

PrintMatrix(matrix); // это вызвали функцию печать массива; мы ее выше сделали так мы ее вызываем;

                                             // 3 ФУНЦИЯ ВЫЗОВ

Console.WriteLine("Результат ПОСЛЕ 3й функции"); // ПОДСКАЗКА ЭТО МАССИВ ПОСЛЕ 3Й ФУНКЦИИ
SquareElements(matrix); // изменяем матрицу напрямую;
PrintMatrix(matrix);    // выводим матрицу уже измененную второй раз;                                  // ЕЩЕ РАЗ ВЫЗВАЛИ ФУНКЦИИ ЧТОБЫ НАПЕЧАТЬ МАССИВ ПОСЛЕ 3Й ФУНКЦИИ



// ЗАДАЧА 2

// Задайте двумерный массив. Найдите сумму элементов,
// находящихся на главной диагонали (с индексами (0,0); (1;1) и
// т.д.

// // 1 ФУНКЦИЯ СОЗДАНИЯ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА
// int[,] CreateMatrix(int rows, int columns) //int[,] запятая показывпет что массив двумерный; функция с двумя переменными;
// {
//     int[,] matr = new int[rows, columns]; // [строки, столбцы]
//     Random rnd = new Random(); // в переменной rnd лежит наш рандомный массив
//     for (int i = 0; i < rows; i++) // rows = matr.GetLength(0) 0 это индекс строки; rows обращается к длине нашей строки
//     {                               //columns = matr.GetLength(1) 1 это индекс столбцов
//         // j, m, k
//         for (int j = 0; j < columns; j++) // columns = matr.GetLength(1) // перебор столбца
//         {
//             matr[i, j] = rnd.Next(101); // [0,100], (0, 101)                                                                      // ЧИСЛА В МАССИВЕ БУДУТ ОТ 0 ДО 100
//         }
//     }
//     return matr; // возвращаем готовый массив созданный от 0 до 100
// }

// // 1 метод создает массив а чтобы вывести его на экран нужен второй метод ниже 
// // 2 ФУНКЦИЯ ПЕЧАТЬ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА

// void PrintMatrix(int[,] matr)  // ФУНКЦИЯ ВЫВОДА МАССИВА НА ЭКРАН КОТОРЫЙ МЫ СДЕЛАЛИ ВЫШЕ                       Цикл в цикле получается
// {
//     for (int i = 0; i < matr.GetLength(0); i++) // стр  //попали в строчку обошли все столбцы; потом след строчка также
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) // столбцы
//         {
//             Console.Write($"{matr[i, j]}\t"); // "\t" = 4 пробела 
//         } // Закончили обход 0 строки, идем в 1
//         Console.WriteLine(); // Перенос на новую строчку \\ это чтобы каждая строка массива были раздельно а не на одной строке

//     }
// }
//                    // 3 ФУНКЦИЯ будет находить 

// int GetMainDiagonalSum(int[,] matr) // Будет брать наш массив 
// {
//     int sum = 0; // добавили переменную sum сюда будут идти 
//     for (int i = 0; i < matr.GetLength(0); i++) // стр  //попали в строчку обошли все столбцы; потом след строчка также
//     {
//         for (int j = 0; j < matr.GetLength(1); j++) // столбцы
//         {
//             if (i == j) // EСЛИ ИНДЕКС I = J РАВЕН ИНДЕКСУ ТО 
//             {
//                sum += matr[i,j]; // sum = sum + matr[i,j]; //это сумма наших чисел если i = j
//             }
//         }
//     }
//       return sum; // чтобы переменная была возвращаемая чтобы sum обновилась;
// }


//                                                                        //1 ФУНКЦИЯ ВЫЗОВ

//     Console.Write("Введите количество строк: "); // это такая подсказка;
//     int rows = Convert.ToInt32(Console.ReadLine()); // это метод получает строку с терминала что мы туда напишем; Convert.ToInt32 = это чтобы строку преобразовать в целые числа
//     Console.Write("Введите количество столбцов: "); // это такая подсказка;
//     int columns = Convert.ToInt32(Console.ReadLine()); // Convert.ToInt32 = это чтобы строку преобразовать в целые числа
//     int[,] matrix = CreateMatrix(rows, columns);// это результат вызванный 1ФУНКЦИЕЙ он в этой переменной; и говорим функция создай мне функцию где rows строчек и colums столбцов
//                                                 // которые мы ввели через Convert.ToInt32(Console.ReadLine()) и преобразовали через Convert.ToInt32;

//                                                                      // 2 ФУНЦИЯ ВЫЗОВ

//     PrintMatrix(matrix); // это вызвали функцию печать массива; мы ее выше сделали так мы ее вызываем;

//                                                                        // 3 ФУНЦИЯ ВЫЗОВ

// Console.WriteLine($"Результат: {GetMainDiagonalSum(matrix)}"); // ВЫЗЫВАЕМ 3Ю ФУНКЦИЮ ЧЕРЕЗ Console.WriteLine


// 3 ЗАДАЧА

// Задайте двумерный массив из целых чисел. Сформируйте новый
// одномерный массив, состоящий из средних арифметических
// значений по строкам двумерного массива. 

// 1 ФУНКЦИЯ СОЗДАНИЯ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА
int[,] CreateMatrix(int rows, int columns) //int[,] запятая показывпет что массив двумерный; функция с двумя переменными;
{
    int[,] matr = new int[rows, columns]; // [строки, столбцы]
    Random rnd = new Random(); // в переменной rnd лежит наш рандомный массив
    for (int i = 0; i < rows; i++) // rows = matr.GetLength(0) 0 это индекс строки; rows обращается к длине нашей строки
    {                               //columns = matr.GetLength(1) 1 это индекс столбцов
        // j, m, k
        for (int j = 0; j < columns; j++) // columns = matr.GetLength(1) // перебор столбца
        {
            matr[i, j] = rnd.Next(101); // [0,100], (0, 101)                                                                      // ЧИСЛА В МАССИВЕ БУДУТ ОТ 0 ДО 100
        }
    }
    return matr; // возвращаем готовый массив созданный от 0 до 100
}

// // 1 метод создает массив а чтобы вывести его на экран нужен второй метод ниже 
// // 2 ФУНКЦИЯ ПЕЧАТЬ МАТРИЦЫ ДВУХМЕРНОГО МАССИВА

void PrintMatrix(int[,] matr)  // ФУНКЦИЯ ВЫВОДА МАССИВА НА ЭКРАН КОТОРЫЙ МЫ СДЕЛАЛИ ВЫШЕ                       Цикл в цикле получается
{
    for (int i = 0; i < matr.GetLength(0); i++) // стр  //попали в строчку обошли все столбцы; потом след строчка также
    {
        for (int j = 0; j < matr.GetLength(1); j++) // столбцы
        {
            Console.Write($"{matr[i, j]}\t"); // "\t" = 4 пробела 
        } // Закончили обход 0 строки, идем в 1
        Console.WriteLine(); // Перенос на новую строчку \\ это чтобы каждая строка массива были раздельно а не на одной строке

    }
}
// 3 ФУНКЦИЯ ПОИСК СРЕДНЕГО АРЕФМЕТИЧЕСКОГО ЧИСЛА

double[] GetArrayWithMeans(int[,] matrix) // МАССИВ С ТИПОМ ДАННЫХ double[] ПОТОМУ ЧТО СРЕДНЕЕ АРИФМЕТИЧЕСКОЕ НЕ ВСЕГДА БУДЕТ ЦЕЛОЕ ЧИСЛО
{                                                              //    ФУНКЦИЯ БЕРЕТ ДВУХМЕРНЫЙ МАССИВ И ПРЕОБРАЗУЕТ ЕГО В ОДНОМЕРНЫЙ
    double[] means = new double[matrix.GetLength(0)]; // СКОЛЬКО СТРОЧЕК БЫЛО В ДВУХМЕРНОМ МАССИВЕ СТОЛЬКО И ЭЛЕМЕНТОВ БУДЕТ ЗДЕСЬ В ОДНОМЕРНОМ МАССИВЕ
    // 1 2     means = [1.5, 0]
    // 3 4
    for (int i = 0; i < matrix.GetLength(0); i++) // стр
    {
        double currentSum = 0;       // ЧТОБЫ СУММЫ СТРОЧЕК НЕ СКЛАДЫВАЛИСЬ ДОБАВИЛИ ПЕРЕМЕННУЮ currentSum КОТОРАЯ ПРИ КАЖДОМ ПРОХОДЕ ЦИКЛА БУДЕТ ОБНУЛЯТЬСЯ
        for (int j = 0; j < matrix.GetLength(1); j++) // столбцы
        {
            currentSum += matrix[i, j]; // currentSum = currentSum + matrix[i,j] ]
        }
        double currentMean = Math.Round(currentSum / matrix.GetLength(1), 2); // СУММА ДЕЛИТЬ НА КОЛИЧЕСТВО СТОЛБЦОВ // Math.Round МЕТОД ОКРУГЛЕНИЯ 2); ЭТО ЗНАЧИТ ДО ДВУХ ЗНАКОВ
        means[i] = currentMean;                                                                                                                         // ПОСЛЕ ОКРУГЛЕНИЯ
    }
    return means; // ПОТОМУ ЧТО  В МЕТОДЕ ФУНКЦИИ УКАЗАЛИ double И ОН ДОЛЖЕН ЧТО ТО ВОЗВРАЩАТЬ В ДАННОМ СЛУЧАЕ ЧИСЛО СРЕД.АРФТЧМКОЕ. СТРОКА ДВУХМЕРНОГО МАССИВА/НА КОЛ-ВО СТОЛБЦОВ  
}

//1 ФУНКЦИЯ ВЫЗОВ

Console.Write("Введите количество строк: "); // это такая подсказка;
int rows = Convert.ToInt32(Console.ReadLine()); // это метод получает строку с терминала что мы туда напишем; Convert.ToInt32 = это чтобы строку преобразовать в целые числа
Console.Write("Введите количество столбцов: "); // это такая подсказка;
int columns = Convert.ToInt32(Console.ReadLine()); // Convert.ToInt32 = это чтобы строку преобразовать в целые числа
int[,] matrix = CreateMatrix(rows, columns);// это результат вызванный 1ФУНКЦИЕЙ он в этой переменной; и говорим функция создай мне функцию где rows строчек и colums столбцов
                                            // которые мы ввели через Convert.ToInt32(Console.ReadLine()) и преобразовали через Convert.ToInt32;

// 2 ФУНЦИЯ ВЫЗОВ

PrintMatrix(matrix); // это вызвали функцию печать массива; мы ее выше сделали так мы ее вызываем;

// 3 ФУНЦИЯ ВЫЗОВ

double[] res = GetArrayWithMeans(matrix);
Console.WriteLine($"Массив: [ {string.Join("; ", res)} ]"); // ЧЕРЕЗ string.Join                                                                    